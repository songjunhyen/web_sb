DROP DATABASE IF EXISTS jsp_sb_article_manager;
CREATE DATABASE jsp_sb_article_manager;
USE jsp_sb_article_manager;

CREATE TABLE `user` (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    userid VARCHAR(30) NOT NULL UNIQUE,
    userpw VARCHAR(60) NOT NULL,
    nickname VARCHAR(30) NOT NULL
   -- ,INDEX idx_id (id) 
);

CREATE TABLE board (
    Id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(20) NOT NULL COMMENT '게시판이름'
);

CREATE TABLE article (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    title VARCHAR(255) NOT NULL,
    `body` TEXT NOT NULL,
    writer VARCHAR(30) NOT NULL,
    boardId INT UNSIGNED NOT NULL,
    viewcount INT UNSIGNED NOT NULL DEFAULT 0
   -- ,FOREIGN KEY (writer) REFERENCES `user`(userid) ON DELETE CASCADE,
   -- FOREIGN KEY (boardId) REFERENCES board(id) ON DELETE CASCADE,
   -- INDEX idx_id (id),
   -- INDEX idx_writer (writer),
   -- INDEX idx_id_writer (id, writer)
);


CREATE TABLE `login_user` (
    num INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    userid VARCHAR(30) NOT NULL UNIQUE,
    nickname VARCHAR(30) NOT NULL,
    login_code VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE likePoint(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT
    , userId INT UNSIGNED NOT NULL
    , relTypeCode VARCHAR(20) NOT NULL COMMENT '관련 데이터 타입 코드'
    , relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호'
    , `point` INT NOT NULL DEFAULT 1
);

CREATE TABLE reply(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT
    , regDate DATETIME NOT NULL
    , updateDate DATETIME NOT NULL
    , userId INT UNSIGNED NOT NULL
    , relTypeCode VARCHAR(20) NOT NULL
    , relId INT UNSIGNED NOT NULL
    , `body` TEXT NOT NULL
    , writer VARCHAR(20) NOT NULL
);

INSERT INTO board (NAME) VALUES ('공지사항'), ('자유게시판'), ('기타');

INSERT INTO `user`
SET regDate = NOW(),
    updateDate = NOW(),
    userid = '12',
    userpw = '12', -- 실제 해시된 비밀번호 값으로 대체
    nickname = '테스터';

-- 테스트데이터 생성
INSERT INTO article(regDate, updateDate, writer, boardId, title, `body`)
SELECT NOW(), NOW(), FLOOR(RAND()*2)+1, FLOOR(RAND()*3)+1, CONCAT('제목_', RAND()), CONCAT('내용_', RAND());


SELECT * FROM article;
SELECT * FROM `user`;
SELECT * FROM `login_user`;
SELECT * FROM board;
SELECT * FROM likepoint;
SELECT * FROM reply;


-- 지금 로그인코드로 확인하는거  spring security인가로 다 가능하데...
-- 쇼핑몰사이트
-- 로그인, 연동로그인
-- 추천기능(상품측에 ~~회원이 방문했다고 기록. 그 기록으로 상품끼리 연관하여 추천?)
--